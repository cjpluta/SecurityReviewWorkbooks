{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "# Security Review Workbook"
      },
      "name": "text - 0"
    },
    {
      "type": 1,
      "content": {
        "json": "some information here about the purpose of the workbook"
      },
      "name": "text - 1"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "value::selected"
        ],
        "parameters": [
          {
            "id": "4f2c05b9-0418-4d07-963f-021c3f9c6234",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "label": "Subscription(s)",
            "type": 6,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resourcecontainers\r\n| where type == \"microsoft.resources/subscriptions\"\r\n| project value = ['id'], label = name, selected = true",
            "crossComponentResources": [
              "value::selected"
            ],
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "value": [
              "/subscriptions/88671c80-9061-47ae-bca2-f66482c60788",
              "/subscriptions/2a165113-1848-4c2b-9e1d-16aa48ac9765"
            ]
          },
          {
            "id": "ff7df8dc-2f41-445c-b9fd-673c82ab97d7",
            "version": "KqlParameterItem/1.0",
            "name": "Workspace",
            "label": "Azure Monitor Logs",
            "type": 5,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resources\r\n| where type =~ 'microsoft.operationalinsights/workspaces'\r\n| project value = id, label = name, selected = true",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "43258100-507f-497c-ab8c-46c67b1a1aae",
            "version": "KqlParameterItem/1.0",
            "name": "Help",
            "label": "Show Help",
            "type": 10,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n    { \"value\": \"1\", \"label\": \"No\" }, \r\n    { \"value\": \"2\", \"label\": \"Yes\", \"selected\":true }\r\n]",
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "pills",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "parameters - 2"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "11e683cb-7b22-4f24-aac9-b932d5686d9e",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "Overview",
            "style": "link"
          },
          {
            "id": "8b535097-19d2-4feb-8d73-1045946b1b2c",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Summary",
            "subTarget": "Summary",
            "style": "link"
          },
          {
            "id": "c145dfd7-b25e-4afe-b30b-96e05e252c40",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Identity",
            "subTarget": "Identity",
            "style": "link"
          },
          {
            "id": "7be48c81-90c0-4e2b-9d73-7cdf2b3174b0",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Devices",
            "subTarget": "Devices",
            "style": "link"
          },
          {
            "id": "2e851a6e-9f9c-4eef-ab64-565a5cd1a115",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Data",
            "subTarget": "Data",
            "style": "link"
          },
          {
            "id": "2c2c9482-c3f9-4855-8f36-495b34885890",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Applications",
            "subTarget": "Applications",
            "style": "link"
          },
          {
            "id": "934c0e10-e082-475c-ae59-d41e004b5600",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Workloads",
            "subTarget": "Workloads",
            "style": "link"
          },
          {
            "id": "19a7c890-1f8f-4955-9d17-810a141a541b",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Additional Resources",
            "subTarget": "Resources",
            "style": "link"
          }
        ]
      },
      "name": "links - 3"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "# Overview"
            },
            "name": "Overview-heading-text"
          },
          {
            "type": 1,
            "content": {
              "json": "**Remove all this text before go live**\r\n\r\nLet's put some text here on what this is about, why it is needed, what it is using, and how to use it. Also, what permissions are needed in order to see the stuff here.\r\n\r\n\r\nWe can also add some links here to things like WAF review, etc\r\n\r\nLet's start with the free stuff, and make recommendations around the paid for stuff, but try and keep to the free stuff as much as possible, and focus on what is there immediately\r\n\r\n\r\nGood stuff here for guidance : https://eng.ms/docs/microsoft-customer-partner-solutions-mcaps-core/customer-experience-and-support/customer-success/azure-core/resource-center/waf/security/wasa/learningpath"
            },
            "name": "Resources-text"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Overview"
      },
      "name": "Overview-Group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "# Summary"
            },
            "name": "Summary-header-text"
          },
          {
            "type": 1,
            "content": {
              "json": "Add here MDC enablement status, plans, etc\r\n\r\nlet's also add a few tiles here, like secure score, number of recommendations, also maybe things like the advisor score, etc"
            },
            "name": "text - 1"
          },
          {
            "type": 1,
            "content": {
              "json": "# Security Posture Overview\r\n\r\n## View your organisation's security posture"
            },
            "customWidth": "40",
            "name": "ss-text",
            "styleSettings": {
              "padding": "3px"
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "securityresources\r\n| where type == \"microsoft.security/securescores\"\r\n| extend score = todouble(properties.score.percentage),\r\n    displayName = properties.displayName,\r\n    environment = properties.environment\r\n| where displayName == \"ASC score\"\r\n| summarize avg(score) by subscriptionId",
                    "size": 3,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "subscriptionId",
                        "formatter": 15,
                        "formatOptions": {
                          "linkColumn": "subscriptionId",
                          "linkTarget": "OpenBlade",
                          "linkIsContextBlade": true,
                          "showIcon": true,
                          "bladeOpenContext": {
                            "bladeName": "SecureScoreDashboard",
                            "extensionName": "Microsoft_Azure_Security",
                            "bladeJsonParameters": "{}"
                          }
                        }
                      },
                      "leftContent": {
                        "columnMatch": "avg_score",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "lightBlue"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "percent",
                            "minimumFractionDigits": 2,
                            "maximumFractionDigits": 2,
                            "minimumSignificantDigits": 1,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "showBorder": true,
                      "sortCriteriaField": "avg_score",
                      "sortOrderField": 2
                    }
                  },
                  "name": "SecureScorePerSub-Query"
                }
              ]
            },
            "customWidth": "60",
            "name": "SecureScoreGroup"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n| where type == \"microsoft.security/pricings\"\r\n| extend pricingTier = tostring(properties.pricingTier),\r\n    subPlan = properties.subPlan,\r\n    freeTrialRemainingTime = properties.freeTrialRemainingTime,\r\n    resourcesCoverageStatus = properties.resourcesCoverageStatus\r\n| summarize StdCount = countif(pricingTier == \"Standard\"), FreeCount = countif(pricingTier == \"Free\") by subscriptionId\r\n| extend Coverage = iff(FreeCount == 0, \"Fully Covered\", \"Partial Coverage\")",
              "size": 3,
              "showAnalytics": true,
              "title": "Defender for Cloud Workload Protection Status per Subscription",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "subscriptionId",
                    "formatter": 15,
                    "formatOptions": {
                      "linkColumn": "subscriptionId",
                      "linkTarget": "OpenBlade",
                      "linkIsContextBlade": true,
                      "showIcon": true,
                      "bladeOpenContext": {
                        "bladeName": "PolicyMenuBlade",
                        "extensionName": "Microsoft_Azure_Security",
                        "bladeParameters": [
                          {
                            "name": "subscriptionId",
                            "source": "cell",
                            "value": ""
                          }
                        ]
                      },
                      "customColumnWidthSetting": "40ch"
                    }
                  },
                  {
                    "columnMatch": "StdCount",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "max": 20,
                      "palette": "blue"
                    }
                  },
                  {
                    "columnMatch": "FreeCount",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "max": 20,
                      "palette": "orange"
                    }
                  },
                  {
                    "columnMatch": "Coverage",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Partial Coverage",
                          "representation": "dot-orange",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Fully Covered",
                          "representation": "dot-green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "subscriptionId",
                    "label": "Subscription"
                  },
                  {
                    "columnId": "StdCount",
                    "label": "Enabled"
                  },
                  {
                    "columnId": "FreeCount",
                    "label": "Not Enabled"
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "MDC-WorkloadProtections-PerSub-Query"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n| where type == \"microsoft.security/assessments\"\r\n| extend ResourceType = tostring(properties.resourceDetails.ResourceType),\r\n    code = tostring(properties.status.code),\r\n    risklevel = tostring(properties.risk.level)\r\n| summarize HealthyCount = countif(code == \"Healthy\"), UnhealthyCount = countif(code == \"Unhealthy\"), NotApplicable = countif(code == \"NotApplicable\") by subscriptionId\r\n| extend fullcount = HealthyCount + UnhealthyCount + NotApplicable\r\n| extend counts = pack_array(HealthyCount, UnhealthyCount, NotApplicable)",
              "size": 3,
              "showAnalytics": true,
              "title": "Defender for Cloud Recommendation Summary",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "subscriptionId",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": "OpenBlade",
                      "linkIsContextBlade": true,
                      "showIcon": true,
                      "bladeOpenContext": {
                        "bladeName": "SecureScoreDashboard",
                        "extensionName": "Microsoft_Azure_Security",
                        "bladeJsonParameters": "{}"
                      },
                      "customColumnWidthSetting": "45ch"
                    }
                  },
                  {
                    "columnMatch": "HealthyCount",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "UnhealthyCount",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "NotApplicable",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "fullcount",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "counts",
                    "formatter": 22,
                    "formatOptions": {
                      "aggregation": "Inherit",
                      "compositeBarSettings": {
                        "labelText": "🟢[\"HealthyCount\"]|🟠[\"UnhealthyCount\"]|⚪[\"NotApplicable\"]",
                        "columnSettings": [
                          {
                            "columnName": "HealthyCount",
                            "color": "green"
                          },
                          {
                            "columnName": "UnhealthyCount",
                            "color": "orange"
                          },
                          {
                            "columnName": "NotApplicable",
                            "color": "gray"
                          }
                        ],
                        "noRowsScaling": true
                      },
                      "customColumnWidthSetting": "25ch"
                    }
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "subscriptionId",
                    "label": "Subscription"
                  },
                  {
                    "columnId": "counts",
                    "label": "Summary Overview"
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "MDC-RecommendationsCount-Query"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Summary"
      },
      "name": "Summary-Group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "# Identity"
            },
            "name": "Identity-header-text"
          },
          {
            "type": 1,
            "content": {
              "json": "can we add some stuff here around RBAC, EntraID, etc?\r\n\r\n{Subscription:subid}"
            },
            "name": "text - 1"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SigninLogs \r\n| summarize count() by AADTenantId",
              "size": 3,
              "title": "EntraID Sign-in Logs - last 24 hours",
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ]
            },
            "name": "SigninLogsCount"
          },
          {
            "type": 1,
            "content": {
              "json": "# Security Event Collection\r\n\r\nEnsure you collect security events from all devices in all subscriptions.",
              "style": "info"
            },
            "name": "text - 5"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "arg(\"\").resourcecontainers\r\n| where type == \"microsoft.resources/subscriptions\" and subscriptionId in ({Subscription:subid})\r\n| project subscriptionId\r\n| join kind=leftouter (\r\nSecurityEvent\r\n| parse _ResourceId with \"/subscriptions/\" subscriptionId \"/\" *\r\n| where isnotempty(subscriptionId)\r\n| summarize EventCount = count() by subscriptionId\r\n) on subscriptionId\r\n| order by EventCount desc",
              "size": 3,
              "title": "Windows Security Events collected - last 24 hours",
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "subscriptionId",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "subscriptionId1",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "EventCount",
                    "formatter": 3,
                    "formatOptions": {
                      "palette": "blue"
                    }
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "subscriptionId",
                    "label": "Subscription"
                  },
                  {
                    "columnId": "EventCount",
                    "label": "Event Count"
                  }
                ]
              },
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "subscriptionId",
                  "formatter": 15,
                  "formatOptions": {
                    "linkTarget": null,
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "count_",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "showBorder": false
              }
            },
            "customWidth": "50",
            "name": "WindowsSecurityEventsCollected-query",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "arg(\"\").resourcecontainers\r\n| where type == \"microsoft.resources/subscriptions\" and subscriptionId in ({Subscription:subid})\r\n| project subscriptionId\r\n| join kind=leftouter (\r\nSyslog \r\n| where Facility in (\"user\", \"auth\", \"authpriv\")\r\n| parse _ResourceId with \"/subscriptions/\" subscriptionId \"/\" *\r\n| summarize EventCount = count() by subscriptionId\r\n) on subscriptionId\r\n| order by EventCount desc",
              "size": 3,
              "title": "Syslog Events for User, Auth collected - last 24 hours",
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "subscriptionId",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "subscriptionId1",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "EventCount",
                    "formatter": 0,
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal"
                      },
                      "emptyValCustomText": "0"
                    }
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "subscriptionId",
                    "label": "Subscription"
                  }
                ]
              },
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "subscriptionId",
                  "formatter": 15,
                  "formatOptions": {
                    "linkTarget": null,
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "count_",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "showBorder": false
              }
            },
            "customWidth": "50",
            "name": "SyslogEvents-query",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessedResourceType = tostring(properties.additionalData.assessedResourceType),\r\n    category = tostring(properties.category)\r\n| where assessedResourceType in (\"GeneralVulnerability\") and (category contains  \"Account\" or category contains \"Domain\" or category contains \"logon\" or category contains \"Password\")\r\n| extend description = tostring(properties.description),\r\n    resourceDetails = tostring(properties.resourceDetails.id),\r\n    Vulnerability = tostring(properties.additionalData.data.Vulnerability),\r\n    displayName = tostring(properties.displayName),\r\n    timeGenerated = todatetime(properties.timeGenerated),\r\n    severity = tostring(properties.status.severity),\r\n    code = tostring(properties.status.code),\r\n    impact = tostring(properties.impact)\r\n| extend TimeFromNow = now() - timeGenerated\r\n| extend [\"TimeAgo\"] = strcat(case(TimeFromNow < 2m, strcat(toint(TimeFromNow / 1s), ' seconds'), TimeFromNow < 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow < 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), '')\r\n| project subscriptionId, assessedResourceType, category, resourceDetails, displayName, description, timeGenerated, TimeAgo, severity, code, impact",
              "size": 0,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "subscriptionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "assessedResourceType",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "description",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "timeGenerated",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "severity",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Low",
                          "representation": "dot-yellow",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Medium",
                          "representation": "dot-orange",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "High",
                          "representation": "dot-red",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "code",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Unhealthy",
                          "representation": "Sev0",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  }
                ],
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "subscriptionId"
                  ],
                  "expandTopLevel": true
                },
                "labelSettings": [
                  {
                    "columnId": "subscriptionId",
                    "label": "Subscription"
                  },
                  {
                    "columnId": "resourceDetails",
                    "label": "Assessed Resource"
                  },
                  {
                    "columnId": "displayName",
                    "label": "Finding"
                  },
                  {
                    "columnId": "TimeAgo",
                    "label": "Time in State"
                  },
                  {
                    "columnId": "severity",
                    "label": "Severity"
                  },
                  {
                    "columnId": "code",
                    "label": "Status"
                  },
                  {
                    "columnId": "impact",
                    "label": "Impact"
                  }
                ]
              }
            },
            "name": "query - 2"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Identity"
      },
      "name": "Identity-Group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "# Devices"
            },
            "name": "text - 0"
          },
          {
            "type": 1,
            "content": {
              "json": "stuff here about vms, vmss, containers, arc machines\r\n\r\nso, endpoint protection, update status, etc"
            },
            "name": "text - 1"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "Resources\r\n| where type == 'microsoft.compute/virtualmachines'\r\n| project id, ComputerName = name, ['type'], location, resourceGroup, subscriptionId\r\n| join kind=leftouter (\r\nresources\r\n| where type contains \"achines/extensions\" and name in (\"MDE.Windows\", \"MDE.Linux\")\r\n| parse id with * \"achines/\" ComputerName \"/\" *\r\n| extend extensionType = properties.type, \r\n\tstatus = properties.provisioningState,\r\n\tversion = properties.typeHandlerVersion\r\n| project ComputerName, name, location, resourceGroup, subscriptionId, status, version\r\n) on ComputerName",
              "size": 0,
              "title": "Defender for Endpoint Extension Status",
              "showExportToExcel": true,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "id",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "ComputerName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "type",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "location",
                    "formatter": 17
                  },
                  {
                    "columnMatch": "resourceGroup",
                    "formatter": 14,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "subscriptionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ComputerName1",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "name",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "is Empty",
                          "representation": "2",
                          "text": "MDE not enabled"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "location1",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "resourceGroup1",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "subscriptionId1",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "status",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "is Empty",
                          "representation": "Blank",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Succeeded",
                          "representation": "dot-green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Failed",
                          "representation": "dot-redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "version",
                    "formatter": 1
                  }
                ],
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "subscriptionId"
                  ],
                  "expandTopLevel": true
                }
              }
            },
            "name": "MDE-Status-ARG"
          },
          {
            "type": 1,
            "content": {
              "json": "# Update Management Status\r\n\r\nThis section reads the onboarding and update assessment status from [Azure Update Manager](https://portal.azure.com/?feature.customportal=false#view/Microsoft_Azure_Automation/UpdateCenterMenuBlade/~/overview)"
            },
            "name": "text - 5"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n| where type in~ ('microsoft.hybridcompute/machines','microsoft.compute/virtualmachines')\r\n| extend statuso = iff(isnull(properties.extended.instanceView.powerState.displayStatus), (properties.status), (properties.extended.instanceView.powerState.displayStatus))\r\n| where isnotnull(statuso)\r\n| summarize count() by tostring(statuso)",
              "size": 0,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "piechart"
            },
            "customWidth": "50",
            "name": "query - 3"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "(resources //join of virtual machines, you can play with params as you see fit.\r\n| where type in~ ('microsoft.hybridcompute/machines','microsoft.compute/virtualmachines')\r\n| extend os = iff(type =~ \"microsoft.compute/virtualmachines\", tolower(tostring(properties.storageProfile.osDisk.osType)), tolower(coalesce(tostring(properties.osName), tostring(properties.osType))))\r\n| extend id=tolower(id)\r\n| extend status=iff(type =~ \"microsoft.compute/virtualmachines\", properties.extended.instanceView.powerState.displayStatus, properties.status)\r\n| project id, name, os, status, resourceProperties=properties)\r\n| join kind=leftouter //finally, making a left outer join to fetch updates details from patchassessment\r\n((patchassessmentresources\r\n| where type in~ (\"microsoft.compute/virtualmachines/patchassessmentresults\", \"microsoft.hybridcompute/machines/patchassessmentresults\")\r\n| where properties.status == \"Succeeded\"\r\n| parse id with resourceId \"/patchAssessmentResults\" *\r\n| extend resourceId=tolower(resourceId)\r\n| project resourceId, assessProperties=properties))\r\non $left.id == $right.resourceId //join on resources id & patchassessment id that is parsed.\r\n| summarize\r\nnodata = countif(isnull(assessProperties) == true),\r\npendingReboot = countif(isnotnull(assessProperties) and assessProperties.rebootPending == \"true\"),\r\n//pendingUpdates - when any classification has > 0 updates\r\npendingUpdatesWindows = countif(isnotnull(assessProperties) and assessProperties.osType =~ \"Windows\" and (assessProperties.availablePatchCountByClassification.critical>0 or assessProperties.availablePatchCountByClassification.security>0 or assessProperties.availablePatchCountByClassification.updateRollup>0 or assessProperties.availablePatchCountByClassification.featurePack>0 or assessProperties.availablePatchCountByClassification.servicePack>0 or assessProperties.availablePatchCountByClassification.definition>0 or assessProperties.availablePatchCountByClassification.tools>0 or assessProperties.availablePatchCountByClassification.updates>0)),\r\npendingUpdatesLinux = countif(isnotnull(assessProperties) and assessProperties.osType =~ \"Linux\" and (assessProperties.availablePatchCountByClassification.security>0 or assessProperties.availablePatchCountByClassification.other>0)),\r\n//noPendingUpdates - when all classifications has 0 updates\r\nnoPendingUpdatesWindows = countif(isnotnull(assessProperties) and assessProperties.osType =~ \"Windows\" and (assessProperties.availablePatchCountByClassification.critical==0 and assessProperties.availablePatchCountByClassification.security==0 and assessProperties.availablePatchCountByClassification.updateRollup==0 and assessProperties.availablePatchCountByClassification.featurePack==0 and assessProperties.availablePatchCountByClassification.servicePack==0 and assessProperties.availablePatchCountByClassification.definition==0 and assessProperties.availablePatchCountByClassification.tools==0 and assessProperties.availablePatchCountByClassification.updates==0)),\r\nnoPendingUpdatesLinux = countif(isnotnull(assessProperties) and assessProperties.osType =~ \"Linux\" and (assessProperties.availablePatchCountByClassification.security==0 and assessProperties.availablePatchCountByClassification.other==0))\r\n| project machinePack = pack(\"No updates available - Linux\", noPendingUpdatesLinux,  \"No updates available - Windows\", noPendingUpdatesWindows,  \"Updates available - Linux\", pendingUpdatesLinux,  \"Updates available - Windows\", pendingUpdatesWindows, \"Reboot required\", pendingReboot,  \"No updates data\", nodata)\r\n| mv-expand machinePack\r\n| extend machine = tostring(bag_keys(machinePack)[0])\r\n| extend count_ = tolong(machinePack[machine])\r\n| project machine, count_ \r\n",
              "size": 0,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "piechart"
            },
            "customWidth": "50",
            "name": "query - 4"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Devices"
      },
      "name": "Devices-Group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "# Data"
            },
            "name": "text - 0"
          },
          {
            "type": 1,
            "content": {
              "json": "stuff here about data, so MDC recommendations about data components, plan details, also other things - how many resources, etc, networking configuration for those, identity bits for it, etc"
            },
            "name": "text - 1"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n| where type == \"microsoft.security/assessments\"\r\n| extend source = trim(' ', tolower(tostring(properties.resourceDetails.Source)))\r\n| extend resourceId = trim(' ', tolower(tostring(case(\r\n    source =~ \"azure\", properties.resourceDetails.Id,\r\n    source =~ \"aws\" and isnotempty(tostring(properties.resourceDetails.ConnectorId)), properties.resourceDetails.Id,\r\n    source =~ \"gcp\" and isnotempty(tostring(properties.resourceDetails.ConnectorId)), properties.resourceDetails.Id,\r\n    source =~ 'aws', properties.resourceDetails.AzureResourceId,\r\n    source =~ 'gcp', properties.resourceDetails.AzureResourceId,\r\n    extract('^(.+)/providers/Microsoft.Security/assessments/.+$', 1, id)\r\n    ))))\r\n| extend status = trim(\" \", tostring(properties.status.code))\r\n| extend cause = trim(\" \", tostring(properties.status.cause))\r\n| extend assessmentKey = tostring(name)\r\n| where assessmentKey == \"7d9b04d9-a520-4bba-9640-89ba4c53f398\"",
              "size": 3,
              "title": "SQL Databases not running on TLS 1.2",
              "noDataMessage": "No SQL Databases not running on TLS 1.2",
              "noDataMessageStyle": 3,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ]
            },
            "name": "SQLDBsTLS-arg-query"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n| where type == \"microsoft.security/assessments\"\r\n| extend source = trim(' ', tolower(tostring(properties.resourceDetails.Source)))\r\n| extend resourceId = trim(' ', tolower(tostring(case(\r\n    source =~ \"azure\", properties.resourceDetails.Id,\r\n    source =~ \"aws\" and isnotempty(tostring(properties.resourceDetails.ConnectorId)), properties.resourceDetails.Id,\r\n    source =~ \"gcp\" and isnotempty(tostring(properties.resourceDetails.ConnectorId)), properties.resourceDetails.Id,\r\n    source =~ 'aws', properties.resourceDetails.AzureResourceId,\r\n    source =~ 'gcp', properties.resourceDetails.AzureResourceId,\r\n    extract('^(.+)/providers/Microsoft.Security/assessments/.+$', 1, id)\r\n    ))))\r\n| extend status = tostring(properties.status.code),\r\n    securityIssue = tostring(properties.metadata.securityIssue),\r\n    userImpact = tostring(properties.metadata.userImpact),\r\n    implementationEffort = tostring(properties.metadata.implementationEffort),\r\n    link = strcat(\"https://\",tostring(properties.links.azurePortal))\r\n| extend assessmentKey = tostring(name)\r\n| where assessmentKey == \"651967bf-044e-4bde-8376-3e08e0600105\" and status != \"Healthy\"\r\n| project subscriptionId, resourceId, resourceGroup, securityIssue, userImpact, implementationEffort, link",
              "size": 3,
              "title": "Transparent Data Encryption on SQL Databases is not enabled",
              "noDataMessage": "No databases found with Transparent Data Encryption on SQL Databases is not enabled",
              "noDataMessageStyle": 3,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "subscriptionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "resourceId",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "resourceGroup",
                    "formatter": 14,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "securityIssue",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "userImpact",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "implementationEffort",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "link",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "Url",
                      "linkLabel": "View Remediation detail"
                    }
                  }
                ],
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "subscriptionId"
                  ],
                  "expandTopLevel": true
                }
              }
            },
            "name": "SQLDB-DataEncryption-arg-query"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n| where type == \"microsoft.security/assessments\"\r\n| extend source = trim(' ', tolower(tostring(properties.resourceDetails.Source)))\r\n| extend resourceId = trim(' ', tolower(tostring(case(\r\n    source =~ \"azure\", properties.resourceDetails.Id,\r\n    source =~ \"aws\" and isnotempty(tostring(properties.resourceDetails.ConnectorId)), properties.resourceDetails.Id,\r\n    source =~ \"gcp\" and isnotempty(tostring(properties.resourceDetails.ConnectorId)), properties.resourceDetails.Id,\r\n    source =~ 'aws', properties.resourceDetails.AzureResourceId,\r\n    source =~ 'gcp', properties.resourceDetails.AzureResourceId,\r\n    extract('^(.+)/providers/Microsoft.Security/assessments/.+$', 1, id)\r\n    ))))\r\n| extend status = trim(\" \", tostring(properties.status.code))\r\n| extend cause = trim(\" \", tostring(properties.status.cause))\r\n| extend assessmentKey = tostring(name)\r\n| where assessmentKey == \"22e93e92-4a31-b4cd-d640-3ef908430aa6\" and status == \"Unhealthy\"\r\n| extend status = tostring(properties.status.code),\r\n    securityIssue = tostring(properties.metadata.securityIssue),\r\n    risklevel = tostring(properties.risk.level),\r\n    link = strcat(\"https://\",tostring(properties.links.azurePortal))\r\n| project subscriptionId, resourceId, resourceGroup, securityIssue, risklevel, link",
              "size": 0,
              "title": "SQL Databases with Public Access",
              "noDataMessage": "NO SQL Databases with Public Access Enabled detected",
              "noDataMessageStyle": 3,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "subscriptionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "resourceId",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "resourceGroup",
                    "formatter": 14,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "securityIssue",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "risklevel",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Low",
                          "representation": "Sev3",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Medium",
                          "representation": "Sev2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "High",
                          "representation": "Sev1",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Critical",
                          "representation": "Sev0",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "link",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "Url",
                      "linkLabel": "View Remediation detail"
                    }
                  }
                ],
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "subscriptionId"
                  ],
                  "expandTopLevel": true
                }
              }
            },
            "name": "SQL-PublicAccess-arg-query"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n| where type == \"microsoft.security/assessments\"\r\n| extend source = trim(' ', tolower(tostring(properties.resourceDetails.Source)))\r\n| extend resourceId = trim(' ', tolower(tostring(case(\r\n    source =~ \"azure\", properties.resourceDetails.Id,\r\n    source =~ \"aws\" and isnotempty(tostring(properties.resourceDetails.ConnectorId)), properties.resourceDetails.Id,\r\n    source =~ \"gcp\" and isnotempty(tostring(properties.resourceDetails.ConnectorId)), properties.resourceDetails.Id,\r\n    source =~ 'aws', properties.resourceDetails.AzureResourceId,\r\n    source =~ 'gcp', properties.resourceDetails.AzureResourceId,\r\n    extract('^(.+)/providers/Microsoft.Security/assessments/.+$', 1, id)\r\n    ))))\r\n| extend status = tostring(properties.status.code),\r\n    securityIssue = tostring(properties.metadata.securityIssue),\r\n    risklevel = tostring(properties.risk.level),\r\n    link = strcat(\"https://\",tostring(properties.links.azurePortal))\r\n| extend cause = trim(\" \", tostring(properties.status.cause))\r\n| extend assessmentKey = tostring(name)\r\n| where assessmentKey == \"82e20e14-edc5-4373-bfc4-f13121257c37\" and status != \"Healthy\"\r\n| project subscriptionId, resourceId, resourceGroup, status, cause, securityIssue, risklevel, link",
              "size": 0,
              "title": "SQL Databases with Vulnerabilities",
              "noDataMessage": "No SQL Databases with Vulnerabilities detected",
              "noDataMessageStyle": 3,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "subscriptionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "resourceId",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "resourceGroup",
                    "formatter": 14,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "status",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Unhealthy",
                          "representation": "Sev0",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "NotApplicable",
                          "representation": "Sev2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "securityIssue",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "risklevel",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Critical",
                          "representation": "Sev0",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "High",
                          "representation": "Sev1",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "link",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "Url",
                      "linkLabel": "View Remediation detail"
                    }
                  }
                ],
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "subscriptionId"
                  ],
                  "expandTopLevel": true
                }
              }
            },
            "name": "SQLDB-Vulnerabilities-arg-query"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Data"
      },
      "name": "Data-Group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "# Applications"
            },
            "name": "text - 0"
          },
          {
            "type": 1,
            "content": {
              "json": "app services, functions, etc? \r\nlogic apps?\r\n\r\n"
            },
            "name": "text - 1"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Applications"
      },
      "name": "Applications-Group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "# Workloads"
            },
            "name": "text - 0"
          },
          {
            "type": 1,
            "content": {
              "json": "what other workload things can we cover? do we cover AI here? or have another tab for that?"
            },
            "name": "text - 1"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Workloads"
      },
      "name": "Workloads-Group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "# Additional Resources"
            },
            "name": "Resources-text-header"
          },
          {
            "type": 1,
            "content": {
              "json": "add extra links here, to product docs, WAF pillars, Zero trust docs\r\nAlso, learn modules"
            },
            "name": "text - 1"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Resources"
      },
      "name": "Resources-Group"
    }
  ],
  "fallbackResourceIds": [
    "Azure Monitor"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}